// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String @db.VarChar(100)
  email    String @unique() @db.VarChar(150)
  password String @db.VarChar(255)
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String    @db.VarChar(100)
  Product Product[]
}

model Product {
  id           Int            @id() @default(autoincrement())
  description  String         @db.VarChar(100)
  stockAmount  Int
  value        Int
  image        String?        @db.Text()
  categoryId   Int
  category     Category       @relation(fields: [categoryId], references: [id])
  OrderProduct OrderProduct[]
}

model Client {
  id       Int     @id() @default(autoincrement())
  name     String  @db.VarChar(100)
  email    String  @unique() @db.VarChar(100)
  cpf      String  @unique() @db.Char(11)
  cep      String? @db.Char(8)
  street   String? @db.VarChar(100)
  number   String? @db.VarChar(20)
  district String? @db.VarChar(100)
  city     String? @db.VarChar(100)
  state    String? @db.VarChar(100)
  Order    Order[]
}

model Order {
  id           Int            @id() @default(autoincrement())
  observation  String         @db.VarChar(255)
  totalAmount  Int
  clientId     Int
  client       Client         @relation(fields: [clientId], references: [id])
  OrderProduct OrderProduct[]
}

model OrderProduct {
  id            Int     @id() @default(autoincrement())
  productAmount Int
  productValue  Int
  productId     Int
  orderId       Int
  product       Product @relation(fields: [productId], references: [id])
  order         Order   @relation(fields: [orderId], references: [id])
}
